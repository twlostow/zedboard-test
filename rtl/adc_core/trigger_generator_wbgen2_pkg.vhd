---------------------------------------------------------------------------------------
-- Title          : Wishbone slave core for Trigger Generator Block
---------------------------------------------------------------------------------------
-- File           : trigger_generator_wbgen2_pkg.vhd
-- Author         : auto-generated by wbgen2 from trigger_generator_wb.wb
-- Created        : Thu Sep 15 18:33:44 2016
-- Standard       : VHDL'87
---------------------------------------------------------------------------------------
-- THIS FILE WAS GENERATED BY wbgen2 FROM SOURCE FILE trigger_generator_wb.wb
-- DO NOT HAND-EDIT UNLESS IT'S ABSOLUTELY NECESSARY!
---------------------------------------------------------------------------------------

library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;

package tg_wbgen2_pkg is
  
  
  -- Input registers (user design -> WB slave)
  
  type t_tg_in_registers is record
    csr_triggered_i                          : std_logic;
    end record;
  
  constant c_tg_in_registers_init_value: t_tg_in_registers := (
    csr_triggered_i => '0'
    );
    
    -- Output registers (WB slave -> user design)
    
    type t_tg_out_registers is record
      csr_enable_o                             : std_logic;
      csr_polarity_o                           : std_logic;
      csr_mask_o                               : std_logic_vector(3 downto 0);
      csr_arm_o                                : std_logic;
      csr_force_o                              : std_logic;
      thr_lo_o                                 : std_logic_vector(15 downto 0);
      thr_hi_o                                 : std_logic_vector(15 downto 0);
      end record;
    
    constant c_tg_out_registers_init_value: t_tg_out_registers := (
      csr_enable_o => '0',
      csr_polarity_o => '0',
      csr_mask_o => (others => '0'),
      csr_arm_o => '0',
      csr_force_o => '0',
      thr_lo_o => (others => '0'),
      thr_hi_o => (others => '0')
      );
    function "or" (left, right: t_tg_in_registers) return t_tg_in_registers;
    function f_x_to_zero (x:std_logic) return std_logic;
    function f_x_to_zero (x:std_logic_vector) return std_logic_vector;
end package;

package body tg_wbgen2_pkg is
function f_x_to_zero (x:std_logic) return std_logic is
begin
if x = '1' then
return '1';
else
return '0';
end if;
end function;
function f_x_to_zero (x:std_logic_vector) return std_logic_vector is
variable tmp: std_logic_vector(x'length-1 downto 0);
begin
for i in 0 to x'length-1 loop
if(x(i) = 'X' or x(i) = 'U') then
tmp(i):= '0';
else
tmp(i):=x(i);
end if; 
end loop; 
return tmp;
end function;
function "or" (left, right: t_tg_in_registers) return t_tg_in_registers is
variable tmp: t_tg_in_registers;
begin
tmp.csr_triggered_i := f_x_to_zero(left.csr_triggered_i) or f_x_to_zero(right.csr_triggered_i);
return tmp;
end function;
end package body;
